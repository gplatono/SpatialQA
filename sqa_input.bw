((((nquan (How.mod-a many.a)) (plur block.n)) ((pres prog) (face.v (any.d (corner-of.n (the.d table.n)))))) ?)
((((nquan (How.mod-a many.a)) (plur stack.n)) ((pres be.v) (on.p (the.d table.n)))) ?)
((((nquan (How.mod-a many.a)) (plur row.n)) ((pres be.v) (on.p (the.d table.n)))) ?)
((((nquan (How.mod-a many.a)) (plur block.n)) ((pres be.v) (on.p (the.d (left.a (side-of.n (the.d table.n))))))) ?)
((((nquan (How.mod-a many.a)) (plur block.n)) ((pres be.v) (in.p (the.d (most-n tall.a stack.n))))) ?)
((((nquan (How.mod-a many.a)) (plur block.n)) ((pres be.v) (in.p (the.d (most-n long.a row.n))))) ?)
((((nquan (How.mod-a many.a)) (plur block.n)) ((pres be.v) (between.p (any.d (two.a (plur stack.n)))))) ?)
((((nquan (How.mod-a many.a)) (plur block.n)) ((pres be.v) clear.a)) ?)
((((nquan (How.mod-a many.a)) (plur block.n)) ((pres be.v) (in.p (some.d (row.n or.cc stack.n))))) ?)
((((nquan (How.mod-a many.a)) (plur block.n)) ((pres prog) not.adv-s (touch.v (the.d table.n)))) ?)
((What.pro ((pres be.v) (= (the.d (n+preds (plur block.n) (on_top_of.p (the.d (|Toyota| block.n)))))))) ?)
((What.pro ((pres be.v) (= (the.d (n+preds (plur block.n) (that.rel ((pres be.v) not.adv-s (on_top_of.p (any.d (other.a block.n)))))))))) ?)
((What.pro ((pres be.v) (= (the.d (n+preds block.n (most-n (close_to.p (the.d (most-n right.a (red.a block.n))))) {block}.n))))) ?)
((What.pro ((pres be.v) (= (the.d (n+preds block.n (between.p ((the.d (|Toyota| {block}.n)) and.cc (the.d (|SRI| block.n))))))))) ?)
((What.pro ((pres be.v) (= (the.d (plur (n+preds block.n (near.p (the.d (plur (corner-of.n (the.d table.n))))))))))) ?)
((What.pro ((pres be.v) (= (the.d (n+preds block.n (most-n (close_to.p (the.d (front.a (edge-of.n (the.d table.n)))))) {block}.n))))) ?)
((What.pro ((pres be.v) (= (the.d (n+preds block.n (on_top_of.p (the.d (most-n tall.a stack.n)))))))) ?)
((What.pro ((pres be.v) (= (the.d (n+preds (plur block.n) (behind.p (the.d (|Nvidia| block.n)))))))) ?)
((What.pro ((pres be.v) (= (the.d (n+preds block.n (that.rel ((pres be.v) (at.p (the.d (most-n right.a (red.a block.n))))))))))) ?)
(((Which.d block.n) ((pres be.v) (= (the.d (most-n high.a {block}.n))))) ?)
(((Which.d block.n) ((pres be.v) (on.p (two.d (other.a (plur block.n)))))) ?)
(((Which.d block.n) ((pres be.v) (in.p (the.d (center-of.n (the.d table.n)))))) ?)
(((What.d (plur block.n)) ((pres be.v) (in.p (the.d (most-n long.a row.n))))) ?)
(((What.d block.n) ((pres be.v) (halfway.adv-a (on_top_of.p (any.d (other.a block.n)))))) ?)
(((Which.d block.n) ((pres be.v) (side_by_side_with.p (the.d (|Texaco| block.n))))) ?)

((What.pro ((pres be.v) (the.d (most-n (far_from.p (the.d (center-of.n (the.d table.n)))) block.n)))) ?)
((what.pro ((pres be.v) (the.d (rep (sub (most-n (far_from.p *p)) (n+preds block.n *h)) (the.d (center-of.n (the.d table.n))))))) ?)

((sub (Which.d block.n) ((the.d (|Nvidia| block.n)) ((pres be.v) (on_top_of.p *h)))) ?)
(((Which.d block.n) ((pres be.v) (adv-a (very.mod-a (close_to.p (the.d (front.a (edge-of.n (the.d table.n))))))))) ?)
((What.pro ((pres be.v) (in.p (the.d (middle-of.n (the.d table.n)))))) ?)
(((Which.d (red.a block.n)) ((pres be.v) (the.d (most-n (close_to.p (the.d (|Toyota| block.n))) ({red}.a {block}.n))))) ?)
(((Which.d (red.a (plur block.n))) ((pres be.v) (directly.adv-a (on.p (the.d table.n))))) ?)
((sub (which.d (blue.a block.n)) ((the.d (|Nvidia| block.n)) ((pres be.v) not.adv-s (near_to.p *h)))) ?)
(((pres be.v) (the.d (|Nvidia| block.n)) (to_the_left_of.p (the.d |Texaco| block.n))) ?)
(((pres be.v) (the.d (|McDonalds| block.n)) (on_top_of.p (the.d (|SRI| block.n)))) ?)
(((pres be.v) (the.d (|Starbucks| block.n)) (near.p (the.d (|Toyota| block.n)))) ?))
(((pres be.v) (the.d (|Toyota| block.n)) (between.p ((the.d (|Nvidia| block.n)) and.cc (the.d (|Target| block.n))))) ?)
(((pres be.v) (the.d (|SRI| block.n)) (fully.adv-a (on_top_of.p (any.d (red.a block.n))))) ?)
(((pres do.aux-s) (the.d (|Toyota| block.n)) (face.v (the.d (|Nvidia| block.n)))) ?)
(((pres do.aux-s) (the.d ((most-n tall.a) stack.n)) (have.v (a.d (red.a block.n)) (on_top_of.p *ref))) ?)
(((pres be.v) (the.d (|Toyota| block.n)) (= (a.d (part-of.n (some.d stack.n))))) ?)
(((pres be.v) (the.d (|Target| block.n)) (= (a.d (part-of.n (some.d row.n))))) ?)
(((pres do.aux-s) (any.d row.n) (contain.v (a.d (red.a block.n)))) ?)
(((pres prog) (any.d (two.a (green.a (plur block.n)))) touch.v) ?)
(((pres be.v) (any.d (two.a (plur stack.n))) (near.p each_other.pro)) ?) 
;;maybe we can just write each_other.pro?
(((pres do.aux-s) (the.d (|SRI| block.n)) (have.v anything.pro (on.p it.pro))) ?)
(((pres be.v) (the.d ((|Nvidia| and.cc |SRI|) (plur block.n))) (in.p (the.d (same.a stack.n)))) ?)
(((pres be.v) (the.d (|Toyota| block.n)) (below.p (the.d (|Texaco| block.n)))) ?)
(((pres be.v) (the.d (|Starbucks| block.n)) (on_top_of.p (any.d row.n))) ?)
(((pres be.v) ((the.d (|Nvidia| (plur {block}.n))) and.cc (the.d (|McDonalds| (plur block.n)))) side_by_side.a) ?)
(((pres be.v) (all.d ({of}.p (the.d (red.a (plur block.n))))) (near.p (the.d (|Nvidia| block.n)))) ?)
(((pres be.v) (every.d (blue.a block.n)) (behind.p (some.d (other.a block.n)))) ?)
(((pres be.v) (the.d (|Texaco| block.n)) (between.p (any.d (two.a (plur block.n))))) ?)
(((pres be.v) (the.d (|Target| block.n)) (slightly.adv-a (to_the_left_of.p (some.d (red.a block.n))))) ?)
(((pres be.v) there.pro (a.d (n+preds block.n (between.p ((the.d (|McDonalds| (plur {block}.n))) and.cc (the.d (|SRI| (plur block.n)))))))) ?)
(((pres be.v) there.pro (a.d (n+preds block.n (near.p (the.d (|Target| block.n)))))) ?)
(((pres be.v) there.pro (a.d (n+preds (red.a block.n) (near.p (a.d (blue.a block.n)))))) ?)
(((pres be.v) there.pro (a.d (n+preds block.n (touch.v (the.d (|Nvidia| block.n)))))) ?)
(((pres be.v) there.pro (any.d (n+preds thing.n (at.p (the.d (front.a (left.a (corner-of.n (the.d table.n))))))))) ?)
(((pres be.v) there.pro (a.d (n+preds row.n (consist_of.v (three.d (plur block.n)))))) ?)
((sub where.a ((the.d (|Toyota| block.n)) ((pres be.v) *h))) ?)
((sub where.a ((some.d (blue.a block.n)) ((pres be.v)  *h))) ?)
((sub where.a ((the.d ((most-n left.a) (red.a block.n))) ((pres be.v)  *h))) ?)
((sub where.a ((any.d (clear.a block.n)) ((pres be.v)  *h))) ?)
((sub where.a ((the.d ((most-n short.a) stack.n)) ((pres be.v) *h))) ?)
((sub where.a ((the.d ((most-n high.a) block.n)) ((pres be.v) *h))) ?)
(((pres be.v) there.pro (a.d (n+preds block.n (face.v (the.d (front.a (right.a (corner-of.n (the.d table.n))))))))) ?)
(((pres be.v) there.pro (a.d (n+preds block.n (face.v (the.d (front.a (edge-of.n (the.d table.n)))))))) ?)
(((pres be.v) there.pro (two.d (n+preds (plur block.n) (face.v each_other.pro)))) ?)
(((pres be.v) there.pro (a.d (n+preds block.n (in.p (the.d (middle-of.n (the.d table.n))))))) ?)
(((pres be.v) there.pro (a.d (n+preds stack.n (near.p (the.d (center-of.n (the.d table.n))))))) ?)
(((pres be.v) there.pro (two.d (n+preds (plur stack.n) (that.rel ((pres be.v) side_by_side.a))))) ?)
(((pres be.v) there.pro (a.d (n+preds ((most-n short.a) stack.n) (on.p (the.d table.n))))) ?)
(((pres be.v) there.pro (a.d (n+preds block.n (on.p (the.d (left.a (side-of.n (the.d table.n)))))))) ?)
(((pres be.v) there.pro (a.d (n+preds block.n (that.rel ((pres be.v) (side_by_side_with.p (the.d (|Nvidia| block.n)))))))) ?)
(((pres be.v) there.pro (a.d (n+preds block.n (that.rel ((pres be.v) (side_by_side_with.p (any.d (red.a block.n)))))))) ?)
(((pres be.v) there.pro (a.d (n+preds block.n (that.rel ((pres be.v) (below.p (two.d (blue.a (plur block.n))))))))) ?)
(((pres be.v) there.pro (a.d (n+preds block.n (on_top_of.p (any.d stack.n))))) ?)
(((pres be.v) there.pro (two.d (n+preds (plur block.n) (that.rel ((pres be) not.adv-s (near.p each_other.pro)))))) ?)
(((pres be.v) there.pro (a.d (n+preds block.n (close_to.p (any.d stack.n))))) ?)
((sub (what.d color.n) ((the.d (n+preds block.n (to_the_left_of.p (the.d (|Nvidia| block.n))))) ((pres be.v) (= *h)))) ?)
((sub (what.d color.n) ((the.d (n+preds block.n (that.rel ((pres be.v) (near.p (the.d ((most-n left.a) (red.a block.n)))))))) ((pres be.v) (= *h)))) ?)
((sub (what.d color.n) ((the.d (n+preds (plur block.n) (near_to.p (the.d (|Toyota| block.n))))) ((pres be.v) (= *h)))) ?)
((sub (what.d color.n) ((the.d (n+preds block.n (close_to.p (the.d (front.a (edge-of.n (the.d table.n))))))) ((pres be.v) (= *h)))) ?)
((sub (what.d color.n) ((the.d (n+preds (plur block.n) (near.p (any.d (edge-of.n (the.d table.n)))))) ((pres be.v)  (= *h)))) ?)
((sub (what.d color.n) ((the.d (n+preds (middle.a block.n) (in.p (the.d ((most-n long.a) row.n))))) ((pres be.v) (= *h)))) ?)
((sub (what.d (plur color.n)) ((the.d (n+preds (plur block.n) (that.rel ((pres be.v) (under.p (some.d (blue.a (plur block.n)))))))) ((pres be.v) (= *h)))) ?)
((sub (what.d color.n) ((the.d (n+preds ((most-n low.a) block.n) (of.p (the.d ((most-n short.a) stack.n))))) ((pres be.v) (= *h)))) ?)
((sub (what.d color.n) ((the.d (n+preds (last.a block.n) (in.p (the.d ((most-n left.a) row.n))))) ((pres be.v) (= *h)))) ?)
((what.pro ((pres be.v) (= (the.d (height-of.n (the.d ((most-n left.a) stack.n))))))) ?)
((what.pro ((pres be.v) (= (the.d (length-of.n (the.d ((most-n long.a) row.n))))))) ?)
((sub (what.d direction.n) ((pres prog) (the.d (|Toyota| block.n)) (face.v *h))) ?)
